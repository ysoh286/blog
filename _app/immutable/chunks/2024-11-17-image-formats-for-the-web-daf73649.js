import{S as ir,i as rr,s as lr,e as s,t as l,a as n,c as i,b as r,d as a,f as t,g as h,k as u,h as d,j as e,n as Ys}from"./index-794e8e40.js";function ar(sr){let I,Tt,it,P,Ee,qt,xt,_e,St,rt,Q,Dt,lt,j,Jt,at,Z,Ct,nt,K,Ht,ht,X,Ot,ft,Y,Rt,dt,k,A,Le,Mt,Ut,z,Ie,Nt,Vt,Pe,Bt,Qt,W,ke,jt,Zt,w,Ge,Kt,Xt,Ae,Yt,$t,ze,eo,mt,$,to,pt,ee,oo,gt,te,so,ut,G,We,io,ro,Fe,lo,ct,oe,ao,vt,v,F,se,Te,no,ho,fo,y,qe,mo,po,xe,go,uo,Se,co,vo,T,ie,De,bo,wo,yo,E,Je,Eo,_o,Ce,Lo,Io,He,Po,ko,q,re,Oe,Go,Ao,zo,_,Re,Wo,Fo,Me,To,qo,Ue,xo,So,x,Ne,Ve,Do,Jo,p,Be,Co,Ho,Qe,Oo,Ro,je,Mo,Uo,Ze,No,Vo,Ke,Bo,Qo,Xe,jo,Zo,Ye,Ko,Xo,L,Yo,$e,$o,es,et,ts,os,ss,tt,is,rs,ot,le,st,ls,as,bt,ae,ns,wt,m,S,hs,D,fs,ds,ms,J,ps,C,gs,us,cs,ne,H,vs,bs,ws,he,O,ys,Es,_s,fe,Ls,R,Is,Ps,de,ks,M,Gs,As,me,U,zs,Ws,Fs,pe,N,Ts,qs,xs,ge,V,Ss,Ds,Js,ue,Cs,B,Hs;return{c(){I=s("p"),Tt=l(`This week’s highlights was completing Lydia Hallie’s Web Development Quiz - so much to learn!
Also discovered she has a JavaScript quiz that would be pretty cool to go through to test JavaScript knowledge from time to time.
Other things learned:`),it=n(),P=s("ul"),Ee=s("li"),qt=l("A very light intro to domain driven design (likely a blog post for some other time)"),xt=n(),_e=s("li"),St=l("Finally looking at some PHP… after avoiding it for too long. Maybe it is time to pick up another language."),rt=n(),Q=s("p"),Dt=l("Today’s review will be a quick summary of image formats for the web."),lt=n(),j=s("h3"),Jt=l("Why image formats are important"),at=n(),Z=s("p"),Ct=l(`Image sizes can get pretty big easily which can affect assets bundling size and optimisation - generally when we compress images, we tend to lose quality and thus images become more pixelated. Is there a way we could be able to preserve quality while also keeping size small so that our websites are still performant enough (and that users don’t need to keep waiting for massive images to load)?
As always, pick what is best for your use case (whether it’s sharing, or smaller images for thumbnails, or needing higher quality images).`),nt=n(),K=s("p"),Ht=l("There are certain features that different image formats support to help with this:"),ht=n(),X=s("h3"),Ot=l("Lossy and lossless compression"),ft=n(),Y=s("p"),Rt=l("There are different ways of compressing data - and these are the two main ones seen for images and reducing sizes of digital files."),dt=n(),k=s("ul"),A=s("li"),Le=s("strong"),Mt=l("Lossy"),Ut=l(": reduces file size by removing some of the original data"),z=s("ul"),Ie=s("li"),Nt=l("used when we can afford to lose data, or need to free up storage space (think of it like making the picture similar but not so much of a difference)"),Vt=n(),Pe=s("li"),Bt=l("good for web use, small file sizes but quality degrades easily"),Qt=n(),W=s("li"),ke=s("strong"),jt=l("Lossless"),Zt=l(": reduces file size by removing metadata"),w=s("ul"),Ge=s("li"),Kt=l("this is used when image quality needs to be preserved, but allows image to still take up less space"),Xt=n(),Ae=s("li"),Yt=l("reversible as no data is lost"),$t=n(),ze=s("li"),eo=l("slightly bigger than lossy, but quality will be preserved"),mt=n(),$=s("h3"),to=l("Progressive image rendering"),pt=n(),ee=s("p"),oo=l("On some websites, you may see images be pixelated, and then over a short period of time (a few seconds later) it becomes sharper and clearer. This is what is known as progressive image rendering - primarily used to give a better user experience rather than having to hide images, or wait for the whole image to load, or having to only load half the image as it comes through."),gt=n(),te=s("p"),so=l("There are 2 ways to achieve this:"),ut=n(),G=s("ul"),We=s("li"),io=l("progressive encoding - where browsers paint low-resolution encoded images to screen while the image is being downloaded"),ro=n(),Fe=s("li"),lo=l("placeholders - this means putting skeletons or empty spaces that match the dimensions of the image to be loaded, or low resolution versions of the images (such as thumbnails) before transitioning to the new image. This can be combined with lazy loading to provide a better user experience."),ct=n(),oe=s("h3"),ao=l("Types of formats used for web"),vt=n(),v=s("ul"),F=s("li"),se=s("p"),Te=s("strong"),no=l("PNG"),ho=l(" (Portable Network Graphics)"),fo=n(),y=s("ul"),qe=s("li"),mo=l("Lossless compression available, higher quality = larger file size"),po=n(),xe=s("li"),go=l("supports transparency"),uo=n(),Se=s("li"),co=l("ideal for illustrations, graphics"),vo=n(),T=s("li"),ie=s("p"),De=s("strong"),bo=l("JPEG"),wo=l(" (Joint Photographic Experts Group)"),yo=n(),E=s("ul"),Je=s("li"),Eo=l("Lossy compression available"),_o=n(),Ce=s("li"),Lo=l("supports progressive image rendering"),Io=n(),He=s("li"),Po=l("Generally a choice for online images, or print"),ko=n(),q=s("li"),re=s("p"),Oe=s("strong"),Go=l("GIF"),Ao=l(" (Graphics Interchange Format)"),zo=n(),_=s("ul"),Re=s("li"),Wo=l("used for simple animations or loops of animations"),Fo=n(),Me=s("li"),To=l("ideal for images with flat colours and hard edges (logos, illustrations with no gradients)"),qo=n(),Ue=s("li"),xo=l("supports transparency"),So=n(),x=s("li"),Ne=s("p"),Ve=s("strong"),Do=l("WEBP"),Jo=n(),p=s("ul"),Be=s("li"),Co=l("created by Google to help ‘make web faster’"),Ho=n(),Qe=s("li"),Oo=l("both lossy and lossless compression"),Ro=n(),je=s("li"),Mo=l("supports transparency"),Uo=n(),Ze=s("li"),No=l("supports progressive image rendering (but not through progressive encoding)"),Vo=n(),Ke=s("li"),Bo=l("supports animation"),Qo=n(),Xe=s("li"),jo=l("generally picking up as a competitor to JPEG as its compression is a lot better compared to it"),Zo=n(),Ye=s("li"),Ko=l("Still awaiting for full browser support"),Xo=n(),L=s("li"),Yo=l("can be loaded with "),$e=s("code"),$o=l("<picture>"),es=l(" / "),et=s("code"),ts=l("<source>"),os=l(" elements and use JPEG as a fallback"),ss=n(),tt=s("li"),is=l("does not support HDR / WCG images, due to 8-bit colour precision limitation"),rs=n(),ot=s("li"),le=s("p"),st=s("strong"),ls=l("AVIF"),as=l(` (AV1 image file format) - both lossy and lossless compression (better than JPEG) - supports transparency - if saving bandwidth is important, this is a good choice - supports HDR (high dynamic range) and WCG (wide color gamut) images - has limited browser support
Both WEBP and AVIF were designed to help overcome limitations of JPEG and PNG mostly through as better compression image formats, and flexibility with other features.`),bt=n(),ae=s("h3"),ns=l("References"),wt=n(),m=s("ul"),S=s("li"),hs=l("Lydia Hallie’s "),D=s("a"),fs=l("Advanced Web Development Quiz"),ds=l(" on FrontEnd Masters (question 26)"),ms=n(),J=s("li"),ps=l("Evgenii Ray’s "),C=s("a"),gs=l("Front End Systems Design"),us=l(" course on FrontEnd Masters"),cs=n(),ne=s("li"),H=s("a"),vs=l("Using Modern Image Formats: AVIF and WebP"),bs=l(" - Addy Osmani via Smashing Magazine"),ws=n(),he=s("li"),O=s("a"),ys=l("WebP - An image format for the web"),Es=l(" - Google for Developers"),_s=n(),fe=s("li"),Ls=l("Adobe’s "),R=s("a"),Is=l("Lossy vs Lossless Compression Differences and When to Use"),Ps=n(),de=s("li"),ks=l("Adobe’s "),M=s("a"),Gs=l("guide to image file formats and image file types"),As=n(),me=s("li"),U=s("a"),zs=l("Progressive image rendering"),Ws=l(" - Coding Horror"),Fs=n(),pe=s("li"),N=s("a"),Ts=l("An introduction to progressive image rendering"),qs=l(" - Cloudinary"),xs=n(),ge=s("li"),V=s("a"),Ss=l("Progressive image rendering"),Ds=l(" - Jose M Perez (Render Conf 2017)"),Js=n(),ue=s("li"),Cs=l("COMM244: Design For the World Wide Web - "),B=s("a"),Hs=l("Web Graphic Formats"),this.h()},l(o){I=i(o,"P",{});var f=r(I);Tt=a(f,`This week’s highlights was completing Lydia Hallie’s Web Development Quiz - so much to learn!
Also discovered she has a JavaScript quiz that would be pretty cool to go through to test JavaScript knowledge from time to time.
Other things learned:`),f.forEach(t),it=h(o),P=i(o,"UL",{});var yt=r(P);Ee=i(yt,"LI",{});var $s=r(Ee);qt=a($s,"A very light intro to domain driven design (likely a blog post for some other time)"),$s.forEach(t),xt=h(yt),_e=i(yt,"LI",{});var ei=r(_e);St=a(ei,"Finally looking at some PHP… after avoiding it for too long. Maybe it is time to pick up another language."),ei.forEach(t),yt.forEach(t),rt=h(o),Q=i(o,"P",{});var ti=r(Q);Dt=a(ti,"Today’s review will be a quick summary of image formats for the web."),ti.forEach(t),lt=h(o),j=i(o,"H3",{});var oi=r(j);Jt=a(oi,"Why image formats are important"),oi.forEach(t),at=h(o),Z=i(o,"P",{});var si=r(Z);Ct=a(si,`Image sizes can get pretty big easily which can affect assets bundling size and optimisation - generally when we compress images, we tend to lose quality and thus images become more pixelated. Is there a way we could be able to preserve quality while also keeping size small so that our websites are still performant enough (and that users don’t need to keep waiting for massive images to load)?
As always, pick what is best for your use case (whether it’s sharing, or smaller images for thumbnails, or needing higher quality images).`),si.forEach(t),nt=h(o),K=i(o,"P",{});var ii=r(K);Ht=a(ii,"There are certain features that different image formats support to help with this:"),ii.forEach(t),ht=h(o),X=i(o,"H3",{});var ri=r(X);Ot=a(ri,"Lossy and lossless compression"),ri.forEach(t),ft=h(o),Y=i(o,"P",{});var li=r(Y);Rt=a(li,"There are different ways of compressing data - and these are the two main ones seen for images and reducing sizes of digital files."),li.forEach(t),dt=h(o),k=i(o,"UL",{});var Et=r(k);A=i(Et,"LI",{});var _t=r(A);Le=i(_t,"STRONG",{});var ai=r(Le);Mt=a(ai,"Lossy"),ai.forEach(t),Ut=a(_t,": reduces file size by removing some of the original data"),z=i(_t,"UL",{});var Lt=r(z);Ie=i(Lt,"LI",{});var ni=r(Ie);Nt=a(ni,"used when we can afford to lose data, or need to free up storage space (think of it like making the picture similar but not so much of a difference)"),ni.forEach(t),Vt=h(Lt),Pe=i(Lt,"LI",{});var hi=r(Pe);Bt=a(hi,"good for web use, small file sizes but quality degrades easily"),hi.forEach(t),Lt.forEach(t),_t.forEach(t),Qt=h(Et),W=i(Et,"LI",{});var It=r(W);ke=i(It,"STRONG",{});var fi=r(ke);jt=a(fi,"Lossless"),fi.forEach(t),Zt=a(It,": reduces file size by removing metadata"),w=i(It,"UL",{});var ce=r(w);Ge=i(ce,"LI",{});var di=r(Ge);Kt=a(di,"this is used when image quality needs to be preserved, but allows image to still take up less space"),di.forEach(t),Xt=h(ce),Ae=i(ce,"LI",{});var mi=r(Ae);Yt=a(mi,"reversible as no data is lost"),mi.forEach(t),$t=h(ce),ze=i(ce,"LI",{});var pi=r(ze);eo=a(pi,"slightly bigger than lossy, but quality will be preserved"),pi.forEach(t),ce.forEach(t),It.forEach(t),Et.forEach(t),mt=h(o),$=i(o,"H3",{});var gi=r($);to=a(gi,"Progressive image rendering"),gi.forEach(t),pt=h(o),ee=i(o,"P",{});var ui=r(ee);oo=a(ui,"On some websites, you may see images be pixelated, and then over a short period of time (a few seconds later) it becomes sharper and clearer. This is what is known as progressive image rendering - primarily used to give a better user experience rather than having to hide images, or wait for the whole image to load, or having to only load half the image as it comes through."),ui.forEach(t),gt=h(o),te=i(o,"P",{});var ci=r(te);so=a(ci,"There are 2 ways to achieve this:"),ci.forEach(t),ut=h(o),G=i(o,"UL",{});var Pt=r(G);We=i(Pt,"LI",{});var vi=r(We);io=a(vi,"progressive encoding - where browsers paint low-resolution encoded images to screen while the image is being downloaded"),vi.forEach(t),ro=h(Pt),Fe=i(Pt,"LI",{});var bi=r(Fe);lo=a(bi,"placeholders - this means putting skeletons or empty spaces that match the dimensions of the image to be loaded, or low resolution versions of the images (such as thumbnails) before transitioning to the new image. This can be combined with lazy loading to provide a better user experience."),bi.forEach(t),Pt.forEach(t),ct=h(o),oe=i(o,"H3",{});var wi=r(oe);ao=a(wi,"Types of formats used for web"),wi.forEach(t),vt=h(o),v=i(o,"UL",{});var b=r(v);F=i(b,"LI",{});var kt=r(F);se=i(kt,"P",{});var Os=r(se);Te=i(Os,"STRONG",{});var yi=r(Te);no=a(yi,"PNG"),yi.forEach(t),ho=a(Os," (Portable Network Graphics)"),Os.forEach(t),fo=h(kt),y=i(kt,"UL",{});var ve=r(y);qe=i(ve,"LI",{});var Ei=r(qe);mo=a(Ei,"Lossless compression available, higher quality = larger file size"),Ei.forEach(t),po=h(ve),xe=i(ve,"LI",{});var _i=r(xe);go=a(_i,"supports transparency"),_i.forEach(t),uo=h(ve),Se=i(ve,"LI",{});var Li=r(Se);co=a(Li,"ideal for illustrations, graphics"),Li.forEach(t),ve.forEach(t),kt.forEach(t),vo=h(b),T=i(b,"LI",{});var Gt=r(T);ie=i(Gt,"P",{});var Rs=r(ie);De=i(Rs,"STRONG",{});var Ii=r(De);bo=a(Ii,"JPEG"),Ii.forEach(t),wo=a(Rs," (Joint Photographic Experts Group)"),Rs.forEach(t),yo=h(Gt),E=i(Gt,"UL",{});var be=r(E);Je=i(be,"LI",{});var Pi=r(Je);Eo=a(Pi,"Lossy compression available"),Pi.forEach(t),_o=h(be),Ce=i(be,"LI",{});var ki=r(Ce);Lo=a(ki,"supports progressive image rendering"),ki.forEach(t),Io=h(be),He=i(be,"LI",{});var Gi=r(He);Po=a(Gi,"Generally a choice for online images, or print"),Gi.forEach(t),be.forEach(t),Gt.forEach(t),ko=h(b),q=i(b,"LI",{});var At=r(q);re=i(At,"P",{});var Ms=r(re);Oe=i(Ms,"STRONG",{});var Ai=r(Oe);Go=a(Ai,"GIF"),Ai.forEach(t),Ao=a(Ms," (Graphics Interchange Format)"),Ms.forEach(t),zo=h(At),_=i(At,"UL",{});var we=r(_);Re=i(we,"LI",{});var zi=r(Re);Wo=a(zi,"used for simple animations or loops of animations"),zi.forEach(t),Fo=h(we),Me=i(we,"LI",{});var Wi=r(Me);To=a(Wi,"ideal for images with flat colours and hard edges (logos, illustrations with no gradients)"),Wi.forEach(t),qo=h(we),Ue=i(we,"LI",{});var Fi=r(Ue);xo=a(Fi,"supports transparency"),Fi.forEach(t),we.forEach(t),At.forEach(t),So=h(b),x=i(b,"LI",{});var zt=r(x);Ne=i(zt,"P",{});var Ti=r(Ne);Ve=i(Ti,"STRONG",{});var qi=r(Ve);Do=a(qi,"WEBP"),qi.forEach(t),Ti.forEach(t),Jo=h(zt),p=i(zt,"UL",{});var c=r(p);Be=i(c,"LI",{});var xi=r(Be);Co=a(xi,"created by Google to help ‘make web faster’"),xi.forEach(t),Ho=h(c),Qe=i(c,"LI",{});var Si=r(Qe);Oo=a(Si,"both lossy and lossless compression"),Si.forEach(t),Ro=h(c),je=i(c,"LI",{});var Di=r(je);Mo=a(Di,"supports transparency"),Di.forEach(t),Uo=h(c),Ze=i(c,"LI",{});var Ji=r(Ze);No=a(Ji,"supports progressive image rendering (but not through progressive encoding)"),Ji.forEach(t),Vo=h(c),Ke=i(c,"LI",{});var Ci=r(Ke);Bo=a(Ci,"supports animation"),Ci.forEach(t),Qo=h(c),Xe=i(c,"LI",{});var Hi=r(Xe);jo=a(Hi,"generally picking up as a competitor to JPEG as its compression is a lot better compared to it"),Hi.forEach(t),Zo=h(c),Ye=i(c,"LI",{});var Oi=r(Ye);Ko=a(Oi,"Still awaiting for full browser support"),Oi.forEach(t),Xo=h(c),L=i(c,"LI",{});var ye=r(L);Yo=a(ye,"can be loaded with "),$e=i(ye,"CODE",{});var Ri=r($e);$o=a(Ri,"<picture>"),Ri.forEach(t),es=a(ye," / "),et=i(ye,"CODE",{});var Mi=r(et);ts=a(Mi,"<source>"),Mi.forEach(t),os=a(ye," elements and use JPEG as a fallback"),ye.forEach(t),ss=h(c),tt=i(c,"LI",{});var Ui=r(tt);is=a(Ui,"does not support HDR / WCG images, due to 8-bit colour precision limitation"),Ui.forEach(t),c.forEach(t),zt.forEach(t),rs=h(b),ot=i(b,"LI",{});var Ni=r(ot);le=i(Ni,"P",{});var Us=r(le);st=i(Us,"STRONG",{});var Vi=r(st);ls=a(Vi,"AVIF"),Vi.forEach(t),as=a(Us,` (AV1 image file format) - both lossy and lossless compression (better than JPEG) - supports transparency - if saving bandwidth is important, this is a good choice - supports HDR (high dynamic range) and WCG (wide color gamut) images - has limited browser support
Both WEBP and AVIF were designed to help overcome limitations of JPEG and PNG mostly through as better compression image formats, and flexibility with other features.`),Us.forEach(t),Ni.forEach(t),b.forEach(t),bt=h(o),ae=i(o,"H3",{});var Bi=r(ae);ns=a(Bi,"References"),Bi.forEach(t),wt=h(o),m=i(o,"UL",{});var g=r(m);S=i(g,"LI",{});var Wt=r(S);hs=a(Wt,"Lydia Hallie’s "),D=i(Wt,"A",{href:!0,rel:!0});var Qi=r(D);fs=a(Qi,"Advanced Web Development Quiz"),Qi.forEach(t),ds=a(Wt," on FrontEnd Masters (question 26)"),Wt.forEach(t),ms=h(g),J=i(g,"LI",{});var Ft=r(J);ps=a(Ft,"Evgenii Ray’s "),C=i(Ft,"A",{href:!0,rel:!0});var ji=r(C);gs=a(ji,"Front End Systems Design"),ji.forEach(t),us=a(Ft," course on FrontEnd Masters"),Ft.forEach(t),cs=h(g),ne=i(g,"LI",{});var Ns=r(ne);H=i(Ns,"A",{href:!0,rel:!0});var Zi=r(H);vs=a(Zi,"Using Modern Image Formats: AVIF and WebP"),Zi.forEach(t),bs=a(Ns," - Addy Osmani via Smashing Magazine"),Ns.forEach(t),ws=h(g),he=i(g,"LI",{});var Vs=r(he);O=i(Vs,"A",{href:!0,rel:!0});var Ki=r(O);ys=a(Ki,"WebP - An image format for the web"),Ki.forEach(t),Es=a(Vs," - Google for Developers"),Vs.forEach(t),_s=h(g),fe=i(g,"LI",{});var Bs=r(fe);Ls=a(Bs,"Adobe’s "),R=i(Bs,"A",{href:!0,rel:!0});var Xi=r(R);Is=a(Xi,"Lossy vs Lossless Compression Differences and When to Use"),Xi.forEach(t),Bs.forEach(t),Ps=h(g),de=i(g,"LI",{});var Qs=r(de);ks=a(Qs,"Adobe’s "),M=i(Qs,"A",{href:!0,rel:!0});var Yi=r(M);Gs=a(Yi,"guide to image file formats and image file types"),Yi.forEach(t),Qs.forEach(t),As=h(g),me=i(g,"LI",{});var js=r(me);U=i(js,"A",{href:!0,rel:!0});var $i=r(U);zs=a($i,"Progressive image rendering"),$i.forEach(t),Ws=a(js," - Coding Horror"),js.forEach(t),Fs=h(g),pe=i(g,"LI",{});var Zs=r(pe);N=i(Zs,"A",{href:!0,rel:!0});var er=r(N);Ts=a(er,"An introduction to progressive image rendering"),er.forEach(t),qs=a(Zs," - Cloudinary"),Zs.forEach(t),xs=h(g),ge=i(g,"LI",{});var Ks=r(ge);V=i(Ks,"A",{href:!0,rel:!0});var tr=r(V);Ss=a(tr,"Progressive image rendering"),tr.forEach(t),Ds=a(Ks," - Jose M Perez (Render Conf 2017)"),Ks.forEach(t),Js=h(g),ue=i(g,"LI",{});var Xs=r(ue);Cs=a(Xs,"COMM244: Design For the World Wide Web - "),B=i(Xs,"A",{href:!0,rel:!0});var or=r(B);Hs=a(or,"Web Graphic Formats"),or.forEach(t),Xs.forEach(t),g.forEach(t),this.h()},h(){u(D,"href","https://frontendmasters.com/courses/web-dev-quiz/"),u(D,"rel","nofollow"),u(C,"href","https://frontendmasters.com/courses/frontend-system-design/"),u(C,"rel","nofollow"),u(H,"href","https://www.smashingmagazine.com/2021/09/modern-image-formats-avif-webp/"),u(H,"rel","nofollow"),u(O,"href","https://developers.google.com/speed/webp#:~:text=WebP%20is%20a%20modern%20image,that%20make%20the%20web%20faster."),u(O,"rel","nofollow"),u(R,"href","https://www.adobe.com/uk/creativecloud/photography/discover/lossy-vs-lossless.html#:~:text=What%20are%20the%20two%20types,size%20by%20removing%20unnecessary%20metadata."),u(R,"rel","nofollow"),u(M,"href","https://www.adobe.com/acrobat/hub/guide-to-image-file-formats.html"),u(M,"rel","nofollow"),u(U,"href","https://blog.codinghorror.com/progressive-image-rendering/"),u(U,"rel","nofollow"),u(N,"href","https://cloudinary.com/blog/an_introduction_to_progressive_image_rendering"),u(N,"rel","nofollow"),u(V,"href","https://jmperezperez.com/renderconf17/#/8"),u(V,"rel","nofollow"),u(B,"href","http://web.simmons.edu/~grovesd/comm244/notes/week5/image-formats"),u(B,"rel","nofollow")},m(o,f){d(o,I,f),e(I,Tt),d(o,it,f),d(o,P,f),e(P,Ee),e(Ee,qt),e(P,xt),e(P,_e),e(_e,St),d(o,rt,f),d(o,Q,f),e(Q,Dt),d(o,lt,f),d(o,j,f),e(j,Jt),d(o,at,f),d(o,Z,f),e(Z,Ct),d(o,nt,f),d(o,K,f),e(K,Ht),d(o,ht,f),d(o,X,f),e(X,Ot),d(o,ft,f),d(o,Y,f),e(Y,Rt),d(o,dt,f),d(o,k,f),e(k,A),e(A,Le),e(Le,Mt),e(A,Ut),e(A,z),e(z,Ie),e(Ie,Nt),e(z,Vt),e(z,Pe),e(Pe,Bt),e(k,Qt),e(k,W),e(W,ke),e(ke,jt),e(W,Zt),e(W,w),e(w,Ge),e(Ge,Kt),e(w,Xt),e(w,Ae),e(Ae,Yt),e(w,$t),e(w,ze),e(ze,eo),d(o,mt,f),d(o,$,f),e($,to),d(o,pt,f),d(o,ee,f),e(ee,oo),d(o,gt,f),d(o,te,f),e(te,so),d(o,ut,f),d(o,G,f),e(G,We),e(We,io),e(G,ro),e(G,Fe),e(Fe,lo),d(o,ct,f),d(o,oe,f),e(oe,ao),d(o,vt,f),d(o,v,f),e(v,F),e(F,se),e(se,Te),e(Te,no),e(se,ho),e(F,fo),e(F,y),e(y,qe),e(qe,mo),e(y,po),e(y,xe),e(xe,go),e(y,uo),e(y,Se),e(Se,co),e(v,vo),e(v,T),e(T,ie),e(ie,De),e(De,bo),e(ie,wo),e(T,yo),e(T,E),e(E,Je),e(Je,Eo),e(E,_o),e(E,Ce),e(Ce,Lo),e(E,Io),e(E,He),e(He,Po),e(v,ko),e(v,q),e(q,re),e(re,Oe),e(Oe,Go),e(re,Ao),e(q,zo),e(q,_),e(_,Re),e(Re,Wo),e(_,Fo),e(_,Me),e(Me,To),e(_,qo),e(_,Ue),e(Ue,xo),e(v,So),e(v,x),e(x,Ne),e(Ne,Ve),e(Ve,Do),e(x,Jo),e(x,p),e(p,Be),e(Be,Co),e(p,Ho),e(p,Qe),e(Qe,Oo),e(p,Ro),e(p,je),e(je,Mo),e(p,Uo),e(p,Ze),e(Ze,No),e(p,Vo),e(p,Ke),e(Ke,Bo),e(p,Qo),e(p,Xe),e(Xe,jo),e(p,Zo),e(p,Ye),e(Ye,Ko),e(p,Xo),e(p,L),e(L,Yo),e(L,$e),e($e,$o),e(L,es),e(L,et),e(et,ts),e(L,os),e(p,ss),e(p,tt),e(tt,is),e(v,rs),e(v,ot),e(ot,le),e(le,st),e(st,ls),e(le,as),d(o,bt,f),d(o,ae,f),e(ae,ns),d(o,wt,f),d(o,m,f),e(m,S),e(S,hs),e(S,D),e(D,fs),e(S,ds),e(m,ms),e(m,J),e(J,ps),e(J,C),e(C,gs),e(J,us),e(m,cs),e(m,ne),e(ne,H),e(H,vs),e(ne,bs),e(m,ws),e(m,he),e(he,O),e(O,ys),e(he,Es),e(m,_s),e(m,fe),e(fe,Ls),e(fe,R),e(R,Is),e(m,Ps),e(m,de),e(de,ks),e(de,M),e(M,Gs),e(m,As),e(m,me),e(me,U),e(U,zs),e(me,Ws),e(m,Fs),e(m,pe),e(pe,N),e(N,Ts),e(pe,qs),e(m,xs),e(m,ge),e(ge,V),e(V,Ss),e(ge,Ds),e(m,Js),e(m,ue),e(ue,Cs),e(ue,B),e(B,Hs)},p:Ys,i:Ys,o:Ys,d(o){o&&t(I),o&&t(it),o&&t(P),o&&t(rt),o&&t(Q),o&&t(lt),o&&t(j),o&&t(at),o&&t(Z),o&&t(nt),o&&t(K),o&&t(ht),o&&t(X),o&&t(ft),o&&t(Y),o&&t(dt),o&&t(k),o&&t(mt),o&&t($),o&&t(pt),o&&t(ee),o&&t(gt),o&&t(te),o&&t(ut),o&&t(G),o&&t(ct),o&&t(oe),o&&t(vt),o&&t(v),o&&t(bt),o&&t(ae),o&&t(wt),o&&t(m)}}}const hr={title:"Weekly learning review - image formats for the web",date:"2024-11-17T13:15:00.000Z"};class fr extends ir{constructor(I){super(),rr(this,I,null,ar,lr,{})}}export{fr as default,hr as metadata};
